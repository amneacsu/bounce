{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap b97a58db84b4a2d2eda1","webpack:///./src/scripts/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","playerCollision","gameState","ball","player","position","radius","xd","yd","sqrRadius","Math","pow","distSqr","sinOfCollision","abs","dist","apply","undefined","concat","gameStateToCanvasState","ballRed","velocity","difficultyModifier","parseInt","ballFill","canvasState","fill","score","highScore","canvasStateToCtx","ctx","drawGround","drawCircle","drawScore","entity","fillStyle","beginPath","arc","PI","closePath","high","font","textAlign","fillText","gameWidth","moveTo","lineTo","lineWidth","strokeStyle","stroke","movePlayer","delta","_gameState","min","max","mouseControl","e","movementX","reset","start","gravity","setup","canvas","document","querySelector","getContext","gameHeight","applyMods","deltaTime","pos","newPosition","map","vel","idx","an","colSide","x1","y1","x2","y2","sqrt","_setup","frameTime","performance","now","tick","newFrameTime","fillRect","window","requestAnimationFrame","addEventListener","requestPointerLock","removeEventListener"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./assets\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar gameWidth = 600;\n\tvar gameHeight = 600;\n\t\n\tvar gameState = {\n\t  player: {\n\t    position: [gameWidth / 2, 7 * gameHeight / 8],\n\t    radius: 0\n\t  },\n\t  ball: {\n\t    position: [0, 0],\n\t    velocity: [0, 0], // px/s\n\t    radius: 20\n\t  },\n\t  start: {\n\t    ball: {\n\t      position: [gameWidth / 2, gameHeight / 6],\n\t      velocity: [100, -200] },\n\t    // px/s\n\t    player: {\n\t      position: [gameWidth / 2, 7 * gameHeight / 8],\n\t      radius: 50\n\t    },\n\t    gravity: 15\n\t  },\n\t  gravity: 0, // velocity modifier,\n\t  score: 0,\n\t  highScore: 0,\n\t  difficultyModifier: 400\n\t};\n\t\n\tvar applyMods = function applyMods(gameState, deltaTime) {\n\t  var player = gameState.player;\n\t  var ball = gameState.ball;\n\t\n\t  var secondsPassed = deltaTime / 1000;\n\t\n\t  // vertical position\n\t  var pos = ball.position;\n\t\n\t  var newPosition = ball.velocity.map(function (vel, idx) {\n\t    return vel * deltaTime / 1000 + pos[idx];\n\t  });\n\t\n\t  ball.position = newPosition;\n\t\n\t  // ball-side collision\n\t  if (ball.velocity[0] > 0 && ball.position[0] > gameWidth - ball.radius || ball.velocity[0] < 0 && ball.position[0] < ball.radius) {\n\t    ball.velocity[0] *= -1;\n\t  }\n\t\n\t  // ball-player collision\n\t  if (playerCollision(gameState) && ball.velocity[1] > 0) {\n\t    ball.velocity[1] *= -1;\n\t\n\t    var an = sinOfCollision(ball, player);\n\t    var colSide = ball.position[0] < player.position[0] ? -1 : 1;\n\t\n\t    ball.velocity[0] = colSide * an * gameState.difficultyModifier;\n\t\n\t    gameState.score += 1;\n\t  } else {\n\t    ball.velocity[1] = ball.velocity[1] + gameState.gravity;\n\t  }\n\t\n\t  // game over\n\t  if (newPosition[1] > gameHeight + 100) {\n\t    reset(gameState);\n\t  }\n\t\n\t  return gameState;\n\t};\n\t\n\tvar dist = function dist(x1, y1, x2, y2) {\n\t  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\t};\n\t\n\tfunction playerCollision(gameState) {\n\t  var ball = gameState.ball;\n\t  var player = gameState.player;\n\t\n\t  if (ball.position[1] + ball.radius < player.position[1] - player.radius) {\n\t    return false;\n\t  }\n\t\n\t  var xd = player.position[0] - ball.position[0];\n\t  var yd = player.position[1] - ball.position[1];\n\t\n\t  var sqrRadius = Math.pow(player.radius + ball.radius, 2);\n\t\n\t  var distSqr = xd * xd + yd * yd;\n\t\n\t  return distSqr <= sqrRadius;\n\t}\n\t\n\tfunction angleOfCollision(ball, player) {\n\t  return Math.abs(player.position[1] - ball.position[1]) / dist.apply(undefined, _toConsumableArray(ball.position).concat(_toConsumableArray(player.position)));\n\t}\n\t\n\tfunction sinOfCollision(ball, player) {\n\t  return Math.abs(player.position[0] - ball.position[0]) / dist.apply(undefined, _toConsumableArray(ball.position).concat(_toConsumableArray(player.position)));\n\t}\n\t\n\tfunction gameStateToCanvasState(gameState) {\n\t  var ballRed = 50 - Math.abs(gameState.ball.velocity[0]) / gameState.difficultyModifier * 50 + 25;\n\t  ballRed = parseInt(ballRed);\n\t  var ballFill = 'hsl(360, ' + ballRed + '%, 50%)';\n\t\n\t  var canvasState = {\n\t    player: {\n\t      position: gameState.player.position,\n\t      radius: gameState.player.radius,\n\t      fill: '#93f'\n\t    },\n\t    ball: {\n\t      position: gameState.ball.position,\n\t      radius: gameState.ball.radius,\n\t      fill: ballFill\n\t    },\n\t    score: gameState.score,\n\t    highScore: gameState.highScore\n\t  };\n\t\n\t  return canvasState;\n\t}\n\t\n\tfunction canvasStateToCtx(canvasState, ctx) {\n\t  drawGround(canvasState.player, ctx);\n\t  drawCircle(canvasState.ball, ctx);\n\t  drawCircle(canvasState.player, ctx);\n\t  drawScore(canvasState.score, canvasState.highScore, ctx);\n\t}\n\t\n\tfunction drawCircle(entity, ctx) {\n\t  ctx.fillStyle = entity.fill;\n\t  ctx.beginPath();\n\t  ctx.arc.apply(ctx, _toConsumableArray(entity.position).concat([entity.radius, 0, 2 * Math.PI, false]));\n\t  ctx.closePath();\n\t  ctx.fill();\n\t}\n\t\n\tfunction drawScore(score, high, ctx) {\n\t  ctx.font = '20px sans-serif';\n\t  ctx.textAlign = 'left';\n\t  ctx.fillStyle = '#aaa';\n\t  ctx.fillText('Score: ' + score, 20, 35);\n\t\n\t  ctx.font = '20px sans-serif';\n\t  ctx.textAlign = 'right';\n\t  ctx.fillText('High score: ' + high, gameWidth - 20, 35);\n\t}\n\t\n\tfunction drawGround(player, ctx) {\n\t  ctx.beginPath();\n\t  ctx.moveTo(0, player.position[1] + 0.5);\n\t  ctx.lineTo(gameWidth, player.position[1] + 0.5);\n\t\n\t  ctx.lineWidth = 4;\n\t  ctx.strokeStyle = player.fill;\n\t  ctx.stroke();\n\t}\n\t\n\tfunction movePlayer(delta) {\n\t  var _gameState = gameState;\n\t  var player = _gameState.player;\n\t\n\t  player.position[0] += delta;\n\t  player.position[0] = Math.min(gameWidth, player.position[0]);\n\t  player.position[0] = Math.max(0, player.position[0]);\n\t}\n\t\n\tfunction mouseControl(e) {\n\t  movePlayer(e.movementX);\n\t}\n\t\n\tfunction keyControl(e) {\n\t  var rate = 3;\n\t\n\t  console.log(e.which);\n\t  switch (e.which) {\n\t    case 37:\n\t      movePlayer(rate * -1);break;\n\t    case 39:\n\t      movePlayer(rate * 1);break;\n\t    default:\n\t      break;\n\t  }\n\t}\n\t\n\tfunction reset(gameState) {\n\t  var player = gameState.player;\n\t  var ball = gameState.ball;\n\t\n\t  ball.position[0] = gameState.start.ball.position[0];\n\t  ball.position[1] = gameState.start.ball.position[1];\n\t  ball.velocity[0] = gameState.start.ball.velocity[0];\n\t  ball.velocity[1] = gameState.start.ball.velocity[1];\n\t\n\t  //player.position[0] = gameState.start.player.position[0];\n\t  //player.position[1] = gameState.start.player.position[1];\n\t\n\t  gameState.highScore = Math.max(gameState.score, gameState.highScore);\n\t  gameState.score = 0;\n\t\n\t  gameState.player.radius = gameState.start.player.radius;\n\t  gameState.gravity = gameState.start.gravity;\n\t}\n\t\n\tfunction setup() {\n\t  var canvas = document.querySelector('#canvas');\n\t  var ctx = canvas.getContext('2d');\n\t\n\t  return { canvas: canvas, ctx: ctx };\n\t}\n\t\n\t(function main() {\n\t  var _setup = setup();\n\t\n\t  var canvas = _setup.canvas;\n\t  var ctx = _setup.ctx;\n\t\n\t  var frameTime = performance.now();\n\t\n\t  ctx.font = '60px sans-serif';\n\t  ctx.fillStyle = '#aaa';\n\t  ctx.textAlign = 'center';\n\t  ctx.fillText('CLICK TO START', gameWidth / 2, gameHeight / 2);\n\t\n\t  var tick = function tick() {\n\t    var newFrameTime = performance.now();\n\t    var deltaTime = newFrameTime - frameTime;\n\t    frameTime = newFrameTime;\n\t\n\t    // fill\n\t    ctx.fillStyle = 'rgba(255, 255, 255, .8)';\n\t    ctx.fillRect(0, 0, gameWidth, gameHeight);\n\t\n\t    gameState = applyMods(gameState, deltaTime);\n\t    var canvasState = gameStateToCanvasState(gameState);\n\t    canvasStateToCtx(canvasState, ctx);\n\t\n\t    window.requestAnimationFrame(tick);\n\t\n\t    // apply difficulty\n\t    if (gameState.player.radius > 10) gameState.player.radius -= 0.008;\n\t    gameState.gravity += 0.02;\n\t  };\n\t\n\t  canvas.addEventListener('mousemove', mouseControl);\n\t\n\t  var start = function start() {\n\t    if (canvas.requestPointerLock) canvas.requestPointerLock();\n\t    frameTime = performance.now();\n\t    reset(gameState);\n\t    tick();\n\t\n\t    canvas.removeEventListener('click', start);\n\t  };\n\t\n\t  canvas.addEventListener('click', start);\n\t})();\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./assets\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b97a58db84b4a2d2eda1\n **/","const gameWidth = 600;\nconst gameHeight = 600;\n\nlet gameState = {\n  player: {\n    position: [gameWidth / 2, 7 * gameHeight / 8],\n    radius: 0\n  },\n  ball: {\n    position: [0, 0],\n    velocity: [0, 0], // px/s\n    radius: 20\n  },\n  start: {\n    ball: {\n      position: [gameWidth / 2, gameHeight / 6],\n      velocity: [100, -200], // px/s\n    },\n    player: {\n      position: [gameWidth / 2, 7 * gameHeight / 8],\n      radius: 50\n    },\n    gravity: 15\n  },\n  gravity: 0, // velocity modifier,\n  score: 0,\n  highScore: 0,\n  difficultyModifier: 400\n};\n\nconst applyMods = (gameState, deltaTime) => {\n  let { player, ball } = gameState;\n  let secondsPassed = deltaTime / 1000;\n\n  // vertical position\n  let pos = ball.position;\n\n  let newPosition = ball.velocity.map(function(vel, idx){\n    return ((vel * deltaTime) / 1000) + pos[idx];\n  });\n\n  ball.position = newPosition;\n\n  // ball-side collision\n  if (\n    (ball.velocity[0] > 0 && ball.position[0] > (gameWidth - ball.radius))\n    || (ball.velocity[0] < 0 && ball.position[0] < ball.radius)\n  ) {\n    ball.velocity[0] *= -1;\n  }\n\n  // ball-player collision\n  if (playerCollision(gameState) && ball.velocity[1] > 0) {\n    ball.velocity[1] *= -1;\n\n    let an = sinOfCollision(ball, player);\n    let colSide = ball.position[0] < player.position[0] ? -1 : 1;\n\n    ball.velocity[0] = colSide * an * (gameState.difficultyModifier);\n\n    gameState.score += 1;\n  } else {\n    ball.velocity[1] = ball.velocity[1] + gameState.gravity;\n  }\n\n\n  // game over\n  if (newPosition[1] > gameHeight + 100) {\n    reset(gameState);\n  }\n\n  return gameState;\n};\n\nvar dist = (x1, y1, x2, y2) => {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n};\n\nfunction playerCollision(gameState) {\n  let { ball, player } = gameState;\n\n  if ((ball.position[1] + ball.radius) < (player.position[1] - player.radius)) {\n    return false;\n  }\n\n  let xd = player.position[0] - ball.position[0];\n  let yd = player.position[1] - ball.position[1];\n\n  let sqrRadius = Math.pow(player.radius + ball.radius, 2);\n\n  let distSqr = (xd * xd) + (yd * yd);\n\n  return distSqr <= sqrRadius;\n}\n\nfunction angleOfCollision(ball, player) {\n  return Math.abs(player.position[1] - ball.position[1]) / dist(...ball.position, ...player.position);\n}\n\nfunction sinOfCollision(ball, player) {\n  return Math.abs(player.position[0] - ball.position[0]) / dist(...ball.position, ...player.position);\n}\n\nfunction gameStateToCanvasState(gameState) {\n  let ballRed = 50 - (Math.abs(gameState.ball.velocity[0]) / gameState.difficultyModifier) * 50 + 25;\n  ballRed = parseInt(ballRed);\n  let ballFill = `hsl(360, ${ballRed}%, 50%)`;\n\n  let canvasState = {\n    player: {\n      position: gameState.player.position,\n      radius: gameState.player.radius,\n      fill: '#93f'\n    },\n    ball: {\n      position: gameState.ball.position,\n      radius: gameState.ball.radius,\n      fill: ballFill\n    },\n    score: gameState.score,\n    highScore: gameState.highScore\n  };\n\n  return canvasState;\n}\n\nfunction canvasStateToCtx(canvasState, ctx) {\n  drawGround(canvasState.player, ctx);\n  drawCircle(canvasState.ball, ctx);\n  drawCircle(canvasState.player, ctx);\n  drawScore(canvasState.score, canvasState.highScore, ctx);\n}\n\nfunction drawCircle(entity, ctx) {\n  ctx.fillStyle = entity.fill;\n  ctx.beginPath();\n  ctx.arc(...entity.position, entity.radius, 0, 2 * Math.PI, false);\n  ctx.closePath();\n  ctx.fill();\n}\n\nfunction drawScore(score, high, ctx) {\n  ctx.font = '20px sans-serif';\n  ctx.textAlign = 'left';\n  ctx.fillStyle = '#aaa';\n  ctx.fillText(`Score: ${score}`, 20, 35);\n\n  ctx.font = '20px sans-serif';\n  ctx.textAlign = 'right';\n  ctx.fillText(`High score: ${high}`, gameWidth - 20, 35);\n}\n\nfunction drawGround(player, ctx) {\n  ctx.beginPath();\n  ctx.moveTo(0, player.position[1] + 0.5);\n  ctx.lineTo(gameWidth, player.position[1] + 0.5);\n\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = player.fill;\n  ctx.stroke();\n}\n\n\nfunction movePlayer(delta) {\n  let { player } = gameState;\n\n  player.position[0] += delta;\n  player.position[0] = Math.min(gameWidth, player.position[0]);\n  player.position[0] = Math.max(0, player.position[0]);\n}\n\nfunction mouseControl(e) {\n  movePlayer(e.movementX);\n}\n\nfunction keyControl(e) {\n  let rate = 3;\n\n  console.log(e.which);\n  switch (e.which) {\n    case 37: movePlayer(rate * -1); break;\n    case 39: movePlayer(rate * 1); break;\n    default: break;\n  }\n}\n\nfunction reset(gameState) {\n  let { player, ball } = gameState;\n  ball.position[0] = gameState.start.ball.position[0];\n  ball.position[1] = gameState.start.ball.position[1];\n  ball.velocity[0] = gameState.start.ball.velocity[0];\n  ball.velocity[1] = gameState.start.ball.velocity[1];\n\n  //player.position[0] = gameState.start.player.position[0];\n  //player.position[1] = gameState.start.player.position[1];\n\n  gameState.highScore = Math.max(gameState.score, gameState.highScore);\n  gameState.score = 0;\n\n  gameState.player.radius = gameState.start.player.radius;\n  gameState.gravity = gameState.start.gravity;\n}\n\n\nfunction setup() {\n  let canvas = document.querySelector('#canvas');\n  let ctx = canvas.getContext('2d');\n\n  return {canvas, ctx};\n}\n\n(function main() {\n  let {canvas, ctx} = setup();\n  let frameTime = performance.now();\n\n  ctx.font = '60px sans-serif';\n  ctx.fillStyle = '#aaa';\n  ctx.textAlign = 'center';\n  ctx.fillText(`CLICK TO START`, gameWidth / 2, gameHeight / 2);\n\n  let tick = function() {\n    let newFrameTime = performance.now();\n    let deltaTime =  newFrameTime - frameTime;\n    frameTime = newFrameTime;\n\n    // fill\n    ctx.fillStyle = 'rgba(255, 255, 255, .8)';\n    ctx.fillRect(0, 0, gameWidth, gameHeight);\n\n    gameState = applyMods(gameState, deltaTime);\n    let canvasState = gameStateToCanvasState(gameState);\n    canvasStateToCtx(canvasState, ctx);\n\n    window.requestAnimationFrame(tick);\n\n    // apply difficulty\n    if (gameState.player.radius > 10) gameState.player.radius -= 0.008;\n    gameState.gravity += 0.02;\n  };\n\n  canvas.addEventListener('mousemove', mouseControl);\n\n  let start = () => {\n    if (canvas.requestPointerLock) canvas.requestPointerLock();\n    frameTime = performance.now();\n    reset(gameState);\n    tick();\n\n    canvas.removeEventListener('click', start);\n  };\n\n  canvas.addEventListener('click', start);\n\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/index.js\n **/"],"sourceRoot":""}